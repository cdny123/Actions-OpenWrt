name: OpenWrt固件编译

on:
workflow_dispatch:
 schedule:
  - cron: '0 2 * * 0'

env:
REPO_URL: https://github.com/istoreos/istoreos
REPO_BRANCH: master
CONFIG_FILE: .config
DIY_SCRIPT_1: diy-part1.sh
DIY_SCRIPT_2: diy-part2.sh
ARTIFACT_NAME: OpenWrt
WEBHOOK_URL: ${{ secrets.TELEGRAM_WEBHOOK }}

jobs:

build:
runs-on: ubuntu-latest

steps:
- uses: actions/checkout@v2
  with:
    fetch-depth: 0

- name: 初始化编译环境
  env:
    DEBIAN_FRONTEND: noninteractive
  run: |
    sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
    sudo -E apt-get -qq update
    sudo -E apt-get -qq install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python3-pip unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
    sudo -E pip3 install --no-cache-dir --upgrade pip
    sudo -E pip3 install --no-cache-dir PyGithub

- name: 克隆源码
  run: |
    git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
    cp -rf openwrt/* ./ 

- name: 自定义编译 (diy-part1.sh)
  run: |
    [ -e $DIY_SCRIPT_1 ] && . ./$DIY_SCRIPT_1

- name: 加载配置文件
  run: |
    [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
    cd openwrt
    make defconfig

- name: 自定义编译 (diy-part2.sh)
  run: |
    [ -e $DIY_SCRIPT_2 ] && . ./openwrt/$DIY_SCRIPT_2

- name: 开始编译
  id: compile
  run: |
    cd openwrt
    make -j$(nproc) || make -j1 V=s
    echo "::set-output name=status::success"
    echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M:%S')"
    echo "::set-output name=version::$(cat version.date)"

- name: 上传固件
  uses: actions/upload-artifact@main
  if: steps.compile.outputs.status == 'success'
  with:
    name: ${{ env.ARTIFACT_NAME }}
    path: openwrt/bin/targets/*/*/*.ipk

- name: 发送通知
  if: steps.compile.outputs.status == 'success'
  env:
    TELEGRAM_WEBHOOK: ${{ secrets.TELEGRAM_WEBHOOK }}
  run: |
    curl -X POST -H 'Content-Type: application/json' --data "{\"text\":\"OpenWrt固件编译成功!\n\n编译时间: ${{ steps.compile.outputs.date }}\n固件版本: ${{ steps.compile.outputs.version }}\"}" $TELEGRAM_WEBHOOK
